import socket
import threading

def handle_client(client_socket, client_address):
    print(f"[+] Connection from {client_address}")
    try:
        while True:
            data = client_socket.recv(1024)
            if not data:
                break
            print(f"[Client {client_address}] {data.decode()}")
            client_socket.send(f"Echo: {data.decode()}".encode())
    except Exception as e:
        print(f"[!] Error with {client_address}: {e}")
    finally:
        client_socket.close()
        print(f"[-] Connection closed: {client_address}")

def start_server(host='127.0.0.1', port=4444):
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.bind((host, port))
    server.listen(5)
    print(f"[+] Server listening on {host}:{port}")
    while True:
        client_socket, client_address = server.accept()
        client_thread = threading.Thread(target=handle_client, args=(client_socket, client_address))
        client_thread.start()

if __name__ == "__main__":
    start_server()
